<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luer.privilegeManage.dao.SysRolePermissionMapper" >
    <resultMap id="BaseResultMap" type="com.luer.privilegeManage.bean.SysRolePermission" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
        <result column="role_id" property="roleId" jdbcType="VARCHAR" />
        <result column="permission_id" property="permissionId" jdbcType="VARCHAR" />
        <result column="permission_name" property="permissionName" jdbcType="VARCHAR" />
        <result column="permission_level" property="permissionLevel" jdbcType="INTEGER" />
        <result column="permission_order" property="permissionOrder" jdbcType="INTEGER" />
    </resultMap>
    <select id="selectAuthByRole" resultType="java.lang.String">
        SELECT sys_role_permission.permission_id FROM sys_role_permission WHERE  sys_role_permission.role_id = #{roleId}
    </select>
    <delete id="deleteByRoleId" parameterType="java.lang.String">
        delete from sys_role_permission
        where sys_role_permission.role_id = #{role,jdbcType=VARCHAR}
    </delete>
    <select id="getPermission" resultMap="BaseResultMap">
        SELECT  * FROM sys_role_permission WHERE role_id=#{roleId} order by permission_level,permission_order;
    </select>
    <select id="getHavePermission" resultMap="BaseResultMap">
        SELECT  * FROM sys_role_permission WHERE role_id=#{roleId} order by permission_level,permission_order;
    </select>
    <insert id="addRolePermission" parameterType="java.util.List" useGeneratedKeys="false">insert into sys_role_permission (
        id,parent_id,role_id,permission_id,permission_name,permission_level,permission_order) values
        <foreach collection="list" item="item" index="index" separator=",">(
            #{item.id},
            #{item.parentId},
            #{item.roleId},
            #{item.permissionId},
            #{item.permissionName},
            #{item.permissionLevel},
            #{item.permissionOrder}
            )
        </foreach>
    </insert>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, parent_id, role_id, permission_id, permission_name, permission_level, permission_order
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.luer.privilegeManage.bean.SysRolePermissionExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from sys_role_permission
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from sys_role_permission
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from sys_role_permission
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.luer.privilegeManage.bean.SysRolePermissionExample" >
        delete from sys_role_permission
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.luer.privilegeManage.bean.SysRolePermission" >
        insert into sys_role_permission (id, parent_id, role_id,
        permission_id, permission_name, permission_level,
        permission_order)
        values (#{id,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR},
        #{permissionId,jdbcType=VARCHAR}, #{permissionName,jdbcType=VARCHAR}, #{permissionLevel,jdbcType=INTEGER},
        #{permissionOrder,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.luer.privilegeManage.bean.SysRolePermission" >
        insert into sys_role_permission
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="parentId != null" >
                parent_id,
            </if>
            <if test="roleId != null" >
                role_id,
            </if>
            <if test="permissionId != null" >
                permission_id,
            </if>
            <if test="permissionName != null" >
                permission_name,
            </if>
            <if test="permissionLevel != null" >
                permission_level,
            </if>
            <if test="permissionOrder != null" >
                permission_order,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null" >
                #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null" >
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="permissionId != null" >
                #{permissionId,jdbcType=VARCHAR},
            </if>
            <if test="permissionName != null" >
                #{permissionName,jdbcType=VARCHAR},
            </if>
            <if test="permissionLevel != null" >
                #{permissionLevel,jdbcType=INTEGER},
            </if>
            <if test="permissionOrder != null" >
                #{permissionOrder,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.luer.privilegeManage.bean.SysRolePermissionExample" resultType="java.lang.Integer" >
        select count(*) from sys_role_permission
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update sys_role_permission
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.parentId != null" >
                parent_id = #{record.parentId,jdbcType=VARCHAR},
            </if>
            <if test="record.roleId != null" >
                role_id = #{record.roleId,jdbcType=VARCHAR},
            </if>
            <if test="record.permissionId != null" >
                permission_id = #{record.permissionId,jdbcType=VARCHAR},
            </if>
            <if test="record.permissionName != null" >
                permission_name = #{record.permissionName,jdbcType=VARCHAR},
            </if>
            <if test="record.permissionLevel != null" >
                permission_level = #{record.permissionLevel,jdbcType=INTEGER},
            </if>
            <if test="record.permissionOrder != null" >
                permission_order = #{record.permissionOrder,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update sys_role_permission
        set id = #{record.id,jdbcType=VARCHAR},
        parent_id = #{record.parentId,jdbcType=VARCHAR},
        role_id = #{record.roleId,jdbcType=VARCHAR},
        permission_id = #{record.permissionId,jdbcType=VARCHAR},
        permission_name = #{record.permissionName,jdbcType=VARCHAR},
        permission_level = #{record.permissionLevel,jdbcType=INTEGER},
        permission_order = #{record.permissionOrder,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.luer.privilegeManage.bean.SysRolePermission" >
        update sys_role_permission
        <set >
            <if test="parentId != null" >
                parent_id = #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null" >
                role_id = #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="permissionId != null" >
                permission_id = #{permissionId,jdbcType=VARCHAR},
            </if>
            <if test="permissionName != null" >
                permission_name = #{permissionName,jdbcType=VARCHAR},
            </if>
            <if test="permissionLevel != null" >
                permission_level = #{permissionLevel,jdbcType=INTEGER},
            </if>
            <if test="permissionOrder != null" >
                permission_order = #{permissionOrder,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.luer.privilegeManage.bean.SysRolePermission" >
        update sys_role_permission
        set parent_id = #{parentId,jdbcType=VARCHAR},
        role_id = #{roleId,jdbcType=VARCHAR},
        permission_id = #{permissionId,jdbcType=VARCHAR},
        permission_name = #{permissionName,jdbcType=VARCHAR},
        permission_level = #{permissionLevel,jdbcType=INTEGER},
        permission_order = #{permissionOrder,jdbcType=INTEGER}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>