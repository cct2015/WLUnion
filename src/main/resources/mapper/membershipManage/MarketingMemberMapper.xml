<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luer.membershipManage.dao.MarketingMemberMapper">
    <resultMap id="BaseResultMap" type="com.luer.membershipManage.bean.MarketingMember">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="merchant_id" property="merchantId" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="gender" property="gender" jdbcType="VARCHAR"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
        <result column="open_id" property="openId" jdbcType="VARCHAR"/>
        <result column="app_id" property="appId" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="add_time" property="addTime" jdbcType="TIMESTAMP"/>
        <result column="add_user" property="addUser" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="source" property="source" jdbcType="INTEGER"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="ReportForm" type="com.luer.reportManage.bean.ReportForm">
        <result column="id" property="id"></result>
        <result column="wxMembers" property="wxMembers"></result>
        <result column="otherMembers" property="otherMembers"></result>
        <result column="totalMembers" property="totalMembers"></result>
        <result column="name" property="name"></result>
        <result column="parentName" property="parentName"></result>

    </resultMap>
    <insert id="importExcelMember" parameterType="java.util.List" useGeneratedKeys="false">
        insert ignore marketing_member (id, merchant_id, phone,
        age, gender,
        open_id, name,
        email,
        add_user,
        add_time,
        status,
        source
        )VALUES
        <foreach collection="list" item="item" index="index" separator=",">(
            #{item.id},
            #{item.merchantId},
            #{item.phone},
            #{item.age},
            #{item.gender},
            #{item.openId},
            #{item.name},
            #{item.email},
            #{item.addUser},
            #{item.addTime},
            #{item.status},
            #{item.source}
            )
        </foreach>
    </insert>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, merchant_id, phone, age, gender, image, open_id, app_id, name, email, add_time,
        add_user, status, source, update_time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.luer.membershipManage.bean.MarketingMemberExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from marketing_member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from marketing_member
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from marketing_member
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.luer.membershipManage.bean.MarketingMemberExample">
        delete from marketing_member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.luer.membershipManage.bean.MarketingMember">
        insert into marketing_member (id, merchant_id, phone,
        age, gender, image,
        open_id, app_id, name,
        email, add_time, add_user,
        status, source, update_time
        )
        values (#{id,jdbcType=VARCHAR}, #{merchantId,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
        #{age,jdbcType=INTEGER}, #{gender,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR},
        #{openId,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, #{addUser,jdbcType=VARCHAR},
        #{status,jdbcType=INTEGER}, #{source,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.luer.membershipManage.bean.MarketingMember">
        insert into marketing_member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="merchantId != null">
                merchant_id,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="image != null">
                image,
            </if>
            <if test="openId != null">
                open_id,
            </if>
            <if test="appId != null">
                app_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="addTime != null">
                add_time,
            </if>
            <if test="addUser != null">
                add_user,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="source != null">
                source,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="merchantId != null">
                #{merchantId,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                #{image,jdbcType=VARCHAR},
            </if>
            <if test="openId != null">
                #{openId,jdbcType=VARCHAR},
            </if>
            <if test="appId != null">
                #{appId,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="addTime != null">
                #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="addUser != null">
                #{addUser,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="source != null">
                #{source,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.luer.membershipManage.bean.MarketingMemberExample"
            resultType="java.lang.Integer">
        select count(*) from marketing_member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update marketing_member
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.merchantId != null">
                merchant_id = #{record.merchantId,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.age != null">
                age = #{record.age,jdbcType=INTEGER},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=VARCHAR},
            </if>
            <if test="record.image != null">
                image = #{record.image,jdbcType=VARCHAR},
            </if>
            <if test="record.openId != null">
                open_id = #{record.openId,jdbcType=VARCHAR},
            </if>
            <if test="record.appId != null">
                app_id = #{record.appId,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.addTime != null">
                add_time = #{record.addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.addUser != null">
                add_user = #{record.addUser,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.source != null">
                source = #{record.source,jdbcType=INTEGER},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update marketing_member
        set id = #{record.id,jdbcType=VARCHAR},
        merchant_id = #{record.merchantId,jdbcType=VARCHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        age = #{record.age,jdbcType=INTEGER},
        gender = #{record.gender,jdbcType=VARCHAR},
        image = #{record.image,jdbcType=VARCHAR},
        open_id = #{record.openId,jdbcType=VARCHAR},
        app_id = #{record.appId,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
        add_user = #{record.addUser,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=INTEGER},
        source = #{record.source,jdbcType=INTEGER},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.luer.membershipManage.bean.MarketingMember">
        update marketing_member
        <set>
            <if test="merchantId != null">
                merchant_id = #{merchantId,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                image = #{image,jdbcType=VARCHAR},
            </if>
            <if test="openId != null">
                open_id = #{openId,jdbcType=VARCHAR},
            </if>
            <if test="appId != null">
                app_id = #{appId,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="addTime != null">
                add_time = #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="addUser != null">
                add_user = #{addUser,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="source != null">
                source = #{source,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.luer.membershipManage.bean.MarketingMember">
        update marketing_member
        set merchant_id = #{merchantId,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        age = #{age,jdbcType=INTEGER},
        gender = #{gender,jdbcType=VARCHAR},
        image = #{image,jdbcType=VARCHAR},
        open_id = #{openId,jdbcType=VARCHAR},
        app_id = #{appId,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        add_time = #{addTime,jdbcType=TIMESTAMP},
        add_user = #{addUser,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
        source = #{source,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <select id="selectAll" resultMap="BaseResultMap">
    select * from marketing_member
  </select>
    <!--导入公众号下会员，如果存在则忽略-->
    <insert id="add" parameterType="java.util.List">
        insert ignore marketing_member(id,phone,merchant_id,open_id,app_id,add_time,add_user,status,source)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id}, #{item.phone},#{item.merchantId}, #{item.openId}, #{item.appId},
            #{item.addTime}, #{item.addUser},#{item.status}, #{item.source})
        </foreach>
    </insert>

    <!--获得商户所有的会员-->
    <select id="getMemberCount" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) from marketing_member
    where merchant_id=#{marchantId,jdbcType=VARCHAR}
  </select>
    <!--获得商户所有的会员-->
    <select id="getMembersCount" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) from marketing_member
    where merchant_id=#{marchantId,jdbcType=VARCHAR} and source=1
  </select>

    <!--获得商户所有微信公众号下的会员-->
    <select id="getWXMemberCount" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) from marketing_member
    where  app_id in(select app_id from marketing_merchant_wx where merchant_id=#{marchantId,jdbcType=VARCHAR})
    and source=${@com.luer.comm.enums.SourceEnum@weixin.getValue()}
  </select>
    <!--获得某一个公众号下的会员-->
    <select id="getOneWXMemberCount" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) from marketing_member
    where  app_id=#{appId,jdbcType=VARCHAR})
  </select>

    <!--获得所有的会员数量-->
    <select id="getAllWXMemberCount" resultType="java.lang.Integer">
        select count(*) from marketing_member
    </select>
    <!--获得所有的会员数量-->
    <select id="getAllMembershipDistribute" resultMap="ReportForm">
         SELECT (select count(phone) from marketing_member) as otherMembers,(select count(phone) from marketing_member where source=0) as wxMembers
    </select>
    <!--企业会员数量报表-->
    <select id="getCompanyMembersTotal" resultMap="ReportForm">
         select  s.totalMembers,w.wxMembers,s.merchant_id as id ,m.company_name as name , mm.company_name as parentName from
         (select count(phone) as totalMembers,merchant_id from marketing_member  GROUP BY merchant_id) s
         LEFT JOIN (select count(phone) as wxMembers,merchant_id from marketing_member WHERE source=0 GROUP BY merchant_id) w on w.merchant_id=s.merchant_id
         LEFT JOIN marketing_merchant m on  s.merchant_id=m.id
         LEFT JOIN marketing_merchant mm on m.parent_id=mm.id
    </select>
    <!--会员数量月增加报表-->
    <select id="getCompanyMembersAddByMonth" resultMap="ReportForm">
        SELECT count(phone) as totalMembers,date_format( add_time,'%Y%m') as name from marketing_member WHERE PERIOD_DIFF(#{addtime},date_format( add_time,'%Y%m')) &lt;= 5
        and PERIOD_DIFF(#{addtime},date_format( add_time,'%Y%m')) &gt;= 0
        GROUP BY mytime
    </select>
</mapper>
